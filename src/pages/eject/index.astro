---
import { CollectionEntry, getEntryBySlug } from 'astro:content';

import SetupStep from '../../components/setup/SetupStep.astro';
import Layout from '../../layouts/Layout.astro';

type SetupSlug = CollectionEntry<'eject'>['slug'];
const checksOrder: SetupSlug[] = [
	//
	'b2bsaaskit',
	'prettier',
	'tailwind',
	'astro',
	'react',
	'trpc',
	'drizzle',
	'eslint',
	'github',
	'doppler',
	'supabase',
	'propel',
	'vercel',
	'stripe',
	'fogbender',
	'posthog',
];

const parsedSteps: {
	step: CollectionEntry<'eject'>;
}[] = [];
for (const slug of checksOrder) {
	const step = await getEntryBySlug('eject', slug);
	parsedSteps.push({ step });
}
---

<Layout ogType="article" title="Cleaning up" description="How to remove unneeded parts">
	<main class="container max-w-[56rem] pb-10">
		<div class="mt-24 flex w-full flex-col md:flex-row">
			<div class="ml-10 md:ml-0">
				<a class="text-lg text-blue-600 hover:text-rose-600 md:text-3xl" href="/">Home</a>
			</div>
			<div class="w-full">
				<div class="ml-10 leading-8">
					<div class="text-5xl">Kit cleanup</div>
				</div>
				<div class="ml-10 mt-14">
					While we tried to choose the best tools to get you started with your own project as
					quickly as possible, you might want to swap some components with your favorites.
					Furthermore, this repo contains a number of files your own project will not need. In this
					section, we'll explain how to clean things up.
				</div>
				<div class="mt-14 flex w-full flex-col gap-8">
					{
						parsedSteps.map(async ({ step }) => {
							const { Content } = await step.render();
							return (
								<SetupStep
									scope="eject"
									id={step.id}
									title={step.data.title || step.slug}
									underConstruction={step.body.trim().endsWith('TODO')}
								>
									<Content />
								</SetupStep>
							);
						})
					}
				</div>
			</div>
		</div>
	</main>
	{/* inline scripts run right away so there will be no flicker */}
	<script is:inline>
		{
			const ls_key = 'eject_section_open';
			const hash = location.hash.slice(1);
			const open = hash || localStorage.getItem(ls_key);
			const el =
				open && document.querySelector(`setup-step[data-id="${open}"] input[type="checkbox"]`);
			el instanceof HTMLInputElement && (el.checked = true);
		}
	</script>
</Layout>

<style>
	main {
		margin: auto;
	}
</style>
<style is:global>
	html {
		font-family: system-ui, sans-serif;
		background-color: #f6f6f6;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
</style>
